server {
    listen 80;
    server_name fain-aiya.shop;

    access_log /var/log/nginx/ssl_access.log;
    error_log  /var/log/nginx/ssl_error.log warn;

    # Let's Encrypt Ïù∏Ï¶ùÏÑú Î∞úÍ∏âÏö© endpoint
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # HTTPS Î¶¨Îã§Ïù¥Î†âÌä∏
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name fain-aiya.shop;

    ssl_certificate /etc/letsencrypt/live/fain-aiya.shop/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fain-aiya.shop/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    access_log /var/log/nginx/ssl_access.log;
    error_log  /var/log/nginx/ssl_error.log warn;

    # # Swagger UI Î¶¨ÏÜåÏä§ ÏÑ§Ï†ï
    # location /swagger-ui/ {
    #     proxy_pass http://spring:8080/swagger-ui/index.html;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # # Swagger Resources Í≤ΩÎ°ú ÏÑ§Ï†ï (Swagger UIÍ∞Ä API Î™ÖÏÑ∏Î•º Ï∞æÎäî Í≤ΩÎ°ú)
    # location /swagger-resources/ {
    #     proxy_pass http://spring:8080/swagger-resources/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # # OpenAPI docs Í≤ΩÎ°ú ÏÑ§Ï†ï
    # location /v3/api-docs/ {
    #     proxy_pass http://spring:8080/v3/api-docs/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }


    location / {
        proxy_pass http://spring:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # üí• Ïó¨Í∏∞ Ï∂îÍ∞Ä
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization,X-Requested-With';
        add_header 'Access-Control-Allow-Credentials' 'false';

        # OPTIONS ÏöîÏ≤≠Ïóê ÎåÄÌï¥ Î∞îÎ°ú ÏùëÎãµ
        if ($request_method = OPTIONS) {
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
}
