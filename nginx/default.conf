server {
    listen 80;
    server_name fain-aiya.shop;

    access_log /var/log/nginx/ssl_access.log;
    error_log  /var/log/nginx/ssl_error.log warn;

    # Let's Encrypt 인증서 발급용 endpoint
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # HTTPS 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name fain-aiya.shop;

    ssl_certificate /etc/letsencrypt/live/fain-aiya.shop/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fain-aiya.shop/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    access_log /var/log/nginx/ssl_access.log;
    error_log  /var/log/nginx/ssl_error.log warn;

    # location /swagger-ui/ {
    # root /usr/share/nginx/html; # Swagger UI가 위치하는 경로
    # try_files $uri $uri/ =404;
    # }


    location / {
        proxy_pass http://spring:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 💥 여기 추가
        add_header 'Access-Control-Allow-Origin' *;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
        add_header 'Access-Control-Allow-Credentials' 'true';

        # OPTIONS 요청에 대해 바로 응답
        if ($request_method = OPTIONS) {
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
}
